create database order_pjt;
use order_pjt;

select * from orders limit 10;

select * from products limit 10;

describe orders;

describe products;

describe account_managers;



-- DATA CLEANING

ALTER TABLE orders
MODIFY order_date date,
modify ship_date date;

describe orders;


update orders
set order_date= str_to_date(order_date,'%m/%d/%Y'),
	ship_date= str_to_date(ship_date,'%m/%d/%Y');
    
-- Checking for Null values

select count(*)
from orders
where order_no is null;


-- Checking for duplicates

SELECT order_no, count(order_no)
from orders
group by order_no
having count(order_no)>1;


select * from orders
where order_no='5768-2' or order_no='6159-2';

-- EXPLORATORY DATA ANALYSIS

-- Total revenue generated by each product category

SELECT product_category, 
	ROUND(SUM(total), 2) AS Revenue
FROM orders
JOIN products
ON orders.product_id = products.product_id
GROUP BY product_category;


-- Unique products have been ordered

SELECT DISTINCT(COUNT(product_name)) AS Unique_Products
FROM products;

-- Total revenue generated each year

SELECT EXTRACT(YEAR from order_date) Year,
	FORMAT(SUM(total), 2) Revenue
FROM orders
GROUP BY Year;

-- Date of the latest and earliest order

SELECT MIN(order_date) 'Earliest Date',
	MAX(order_date) Latest_date
FROM orders;

-- Product category has the lowest average price of products

SELECT product_category,
	ROUND(AVG(retail_price), 2) Average_price
FROM orders
JOIN products
USING(product_id)
GROUP BY product_category
ORDER BY Average_price
LIMIT 1;

-- Top 10 highest performing products

SELECT product_name,
	ROUND(SUM(total), 2) Revenue
FROM orders
JOIN products
USING(product_id)
GROUP BY product_name
ORDER BY Revenue DESC
LIMIT 10;

-- The total revenue and profit generated by each account_manager

SELECT account_manager,
	ROUND(SUM(total), 2) Revenue,
        ROUND(SUM(total) - SUM(cost_price), 2) Profit
FROM orders
JOIN account_managers
USING(account_id)
GROUP BY account_manager
ORDER BY Revenue DESC;


-- Name, city and account manager of the highest selling product in 2017

SELECT product_name,
	city,
        account_manager,
        ROUND(SUM(total)) Revenue
FROM orders
JOIN products
USING(product_id)
JOIN account_managers
USING(account_id)
WHERE EXTRACT(year from order_date) = 2017
GROUP BY product_name, city, account_manager
ORDER BY Revenue DESC
LIMIT 1;


-- Mean amount spent per order by each Customer type?
SELECT customer_type,
	AVG(total) Average_amount
FROM orders
GROUP BY customer_type;



    



